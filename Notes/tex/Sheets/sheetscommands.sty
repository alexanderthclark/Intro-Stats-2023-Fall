\newcommand{\code}[1]{\lstinline[language = Python]{#1}}
\newcommand{\link}[2]{\textcolor{blue}{\href{#1}{#2}}}

\newcommand{\reading}[1]{\scalebox{0.8}{\textit{Reference: {#1}}}}


% margin notes for file names
\usepackage{mparhack}

% for inserting label into inlinelisting
\newcommand{\margintextB}[1]{
\marginnote{\scalebox{0.76}{\texttt{#1}}}}

\newcommand{\margintext}[1]{\marginpar{\scalebox{0.65}{\texttt{#1}}}}

\newcommand{\margintextC}[1]{
\marginpar[]{\rotatebox{270}{\hspace{-6pt}\scalebox{0.9}{\texttt{#1}}}}}

% Abandoned but here anyway ----------------------------

% for referencing a py file directly
\newcommand{\pyfileBB}[2]{
\lstinputlisting[language = Python, caption={[#2.py]{}}]{#1}\marginnote{\rotatebox{270}\scalebox{0.9}{\code{#2}}}}

\newcommand{\pyfile}[2]{
\lstinputlisting[language = Python, caption={[#2.py]{}}]{#1}\marginnote{\rotatebox{270}{\hspace{4pt}\scalebox{0.9}{\code{#2}}}}
}

\newcommand{\pyfilealt}[2]{\marginnote{\rotatebox{270}{\hspace{11pt}\scalebox{0.9}{\code{#2}}}}
\lstinputlisting[language = Python, caption={[#2.py]{}}]{#1}}

%%% for notebook-like tex
% https://tex.stackexchange.com/question/223465/ipython-notebook-cells-with-listings
%\newcommand{\output}[1]{\begin{tcolorbox}[breakable, size=fbox, boxrule=.5pt, pad at break*=1mm, opacityfill=0]
%\prompt{Out}{outcolor}{1}{\boxspacing}
%\begin{Verbatim}[commandchars=\\\{\}]
%[#1]
%\end{Verbatim}
%\end{tcolorbox}}



%%%% pas-tableur modifications
\definecolor{orangeSelect}{cmyk}{0,.25,1, 0.0}
\definecolor{orangeLine}{cmyk}{0,.25,1, .5}

% comments translated by chatgpt
\newcommand*\multiSelect[2]
	{%
		%==> Filling the selected cells with a semi-transparent blue color
		\fill[orangeSelect,opacity=0.25] ($(cell#1.north west)+(0.25pt,-0.25pt)$) rectangle ($(cell#2.south east)+(-0.25pt,0.25pt)$);%
		% Drawing a thick border around the first selected cell
		\draw[thick, dashed, orangeLine] (cell#1.north west) rectangle (cell#2.south east);%
		% Drawing a small black rectangle in the bottom-right corner of the second selected cell
		%\fill[black] ($(cell#2.south east)+(-0.5pt,0.5pt)$) rectangle +(3pt,-3pt);%
		%
		%==> Coloring the "column" headers
		%	
		%\StrChar{#1}{1}[\str@start] % for example, "G"
		%\StrChar{#2}{1}[\str@end]   % for example, "L"
		%\StrBetween{\col@names}{\str@start}{\str@end}[\str@col] % returns for example "HIJK"
		%\edef\str@col{\str@start\str@col%\str@end} % becomes "GHIJKL"
		%\StrLen{\str@col}[\nb@columns] % number of "column" headers to color
		%\foreach \i in {1,...,\nb@columns}
		%{%
		%	\StrChar{\str@col}{\i}[\name]%
		%	\pastableur@colorcell{\name}{1}
		%	\node at (\name) {\helvbx\name};%
		%}%
		%	
		%==> Coloring the "row" headers
		%	
		%\StrGobbleLeft{#1}{2}[\first@num]%
		%\StrGobbleLeft{#2}{2}[\second@num]%
		%\foreach \i in {\first@num,...,%%\second@num}
		%{%
		%	\pastableur@colorcell{numline\i}{0}
		%	\node[celhead,minimum width=\numline@width,minimum height=\line@height] at (numline\i) {\helvbx\i};%
		%}%
	}% end of \multiSelec

\newcommand*\cellEntry[3]{\selecCell{#1}{#2}\celtxt[l,color=red]{#1}{#2}{#3}
}

\newcommand*\selectCell[2]
	{%
		%==> Row Header	
		%
		\%pastableur@colorcell{numline#2}{0}
		%\node[celhead,minimum width=\numline@width,minimum height=\line@height] at (numline#2) {\helvbx#2};%
		%	
		%==> Column Header
		%
		%\pastableur@colorcell{#1}{1}
		%\node at (#1) {\helvbx#1};%
		%
		%==> Cell cell#1-#2
		%	
		\draw[very thick] (cell#1-#2.south west) rectangle (cell#1-#2.north east);%
		\fill[black] ($(cell#1-#2.south east)+(-1pt,1pt)$) rectangle +(3pt,-3pt);%
	} % end of \selecCell
%

